Review the following C code for a credit card validator. Assess the function names for clarity and consistency, and evaluate the codeâ€™s quality, security, and maintainability. Apply best practices, standards, and guidelines to ensure compliance with coding standards and relevant regulations.
```c
#ifndef CREDITCARD_H
#define CREDITCARD_H

long get_card_length(long card);
int get_count_outcome(int count);
int amex_first_digit(int count, long card);
int amex_second_digit(int count, long card);
int visa_master_first_digit(int count, long card);
int visa_master_second_digit(int count, long card);
int visa_first_digit(int count, long card);
int second_to_last(int count, long card);
int lasts(int count, long card);

#endif
```
```c
#include "creditcard.h"

int amex_first_digit(int count, long card)
{
    long test_length = card;
    long whole, remainder;
    int first;

    for (int i = count; i > 0; --i)
    {
        whole = test_length / 10;
        remainder = test_length % 10;
        test_length = whole;

        if (i != 1)
            continue;

        first = remainder;
    }

    return first;
}
```
```c
#include "creditcard.h"

int amex_second_digit(int count, long card)
{
    long test_length = card;
    long whole, remainder;
    int second;

    for (int i = count; i > 0; --i)
    {
        whole = test_length / 10;
        remainder = test_length % 10;
        test_length = whole;

        if (i != 2)
            continue;

        second = remainder;
    }

    return second;
}
```
```c
#include "creditcard.h"
#include <cs50.h>
#include <stdio.h>

int main(void)
{
    long long int card;

    // Prompt the user for a credit card number.
    do
    {
        card = get_long("Number: ");
    }
    while (card < 0);

    // Get the length of the credit card number.
    int count = get_card_length(card);

    // Check if the length is valid.
    int outcome = get_count_outcome(count);
    if (outcome == 1)
    {
        printf("INVALID\n");
        return 0;
    }

    // Calculate the sum of second-to-last and last digits.
    int second_to_lasts = second_to_last(count, card);
    int last = lasts(count, card);
    int total_sum = second_to_lasts + last;

    // Check if the total sum is divisible by 10.
    if (total_sum % 10 != 0)
    {
        printf("INVALID\n");
        return 0;
    }

    // Check the type of credit card and print the result.
    if (count == 15)
    {
        int amex_first = amex_first_digit(count, card);
        int amex_second = amex_second_digit(count, card);
        if (amex_first == 3 && (amex_second == 4 || amex_second == 7))
        {
            printf("AMEX\n");
        }
        else
        {
            printf("INVALID\n");
            return 0;
        }
    }
    else if (count == 16)
    {
        int visa_master = visa_master_first_digit(count, card);
        if (visa_master == 4)
        {
            printf("VISA\n");
        }
        else if (visa_master == 5)
        {
            int visa_master_second = visa_master_second_digit(count, card);
            if (visa_master_second != 1 && visa_master_second != 2 && visa_master_second != 3 && visa_master_second != 4 &&
                visa_master_second != 5)
            {
                printf("INVALID\n");
                return 0;
            }
            printf("MASTERCARD\n");
        }
        else
        {
            printf("INVALID\n");
            return 0;
        }
    }
    else
    {
        int visa_first = visa_first_digit(count, card);
        if (visa_first == 4)
        {
            printf("VISA\n");
        }
        return 0;
    }

    return 0;
}
```
```c
#include "creditcard.h"

long get_card_length(long card)
{
    long count = 0;
    long boolean = 1;
    long test_length = card;
    long whole, remainder;

    // Continue the loop as long as boolean is true (non-zero).
    while (boolean)
    {
        // Divide the test_length by 10 to get the quotient and remainder.
        whole = test_length / 10;
        remainder = test_length % 10;
        test_length = whole;
        boolean = whole;

        count++;
    }

    // Return the calculated length of the credit card number.
    return count;
}
```
```c
#include "creditcard.h"

int get_count_outcome(int count)
{
    // Check if the count is not 13, 15, or 16.
    if (count != 13 && count != 15 && count != 16)
    {
        return 1;
    }

    return 0;
}
```
```c
#include "creditcard.h"

int lasts(int count, long card)
{
    int remainder;
    int sum = 0;
    long first_whole;

    for (int i = count; i > 0; i -= 2)
    {
        remainder = card % 10;
        first_whole = card / 100;
        card = first_whole;

        sum += remainder;
    }

    return sum;
}
```
```c
#include "creditcard.h"

int second_to_last(int count, long card)
{
    int sum = 0;
    int two_product, first_value, second_value, remainder;
    long first_whole, second_whole;

    for (int i = count; i > 0; i -= 2)
    {
        first_whole = card / 10;
        remainder = first_whole % 10;
        second_whole = first_whole / 10;
        card = second_whole;

        // Multiply remainder by 2
        two_product = remainder * 2;

        if (two_product > 9)
        {
            first_value = two_product / 10;
            second_value = two_product % 10;
            sum += first_value + second_value;
        }
        else
        {
            sum += two_product;
        }
    }

    return sum;
}
```
```c
#include "creditcard.h"

int visa_first_digit(int count, long card)
{
    long test_length = card;
    long whole, remainder;
    int first;

    for (int i = count; i > 0; --i)
    {
        whole = test_length / 10;
        remainder = test_length % 10;
        test_length = whole;

        if (i != 1)
            continue;

        first = remainder;
    }

    return first;
}
```
```c
#include "creditcard.h"

int visa_master_first_digit(int count, long card)
{
    long test_length = card;
    long whole, remainder;
    int first;

    for (int i = count; i > 0; --i)
    {
        whole = test_length / 10;
        remainder = test_length % 10;
        test_length = whole;

        if (i != 1)
            continue;

        first = remainder;
    }

    return first;
}
```
```c
#include "creditcard.h"

int visa_master_second_digit(int count, long card)
{
    long test_length = card;
    long whole, remainder;
    int second;

    for (int i = count; i > 0; --i)
    {
        whole = test_length / 10;
        remainder = test_length % 10;
        test_length = whole;

        if (i != 2)
            continue;

        second = remainder;
    }

    return second;
}
```
